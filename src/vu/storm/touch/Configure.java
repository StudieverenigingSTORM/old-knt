/*     */ package vu.storm.touch;
/*     */ 
/*     */ import java.io.BufferedReader;
/*     */ import java.io.FileInputStream;
/*     */ import java.io.FileOutputStream;
/*     */ import java.io.InputStreamReader;
/*     */ import java.util.Properties;
/*     */ 
/*     */ public class Configure
/*     */ {
/*     */   String[] args;
/*     */   BufferedReader in;
/*     */   
/*     */   Configure(String[] args) {
/*  15 */     this.args = args;
/*  16 */     this.in = new BufferedReader(new InputStreamReader(System.in));
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public static void main(String[] args) {
/*  22 */     (new Configure(args)).start();
/*     */   }
/*     */   
/*     */   public void start() {
/*  26 */     Properties properties = new Properties();
/*  27 */     if (this.args.length > 0) {
/*     */       
/*     */       try
/*     */       {
/*  31 */         properties.loadFromXML(new FileInputStream(this.args[0]));
/*     */       }
/*  33 */       catch (Exception e)
/*     */       {
/*  35 */         System.err.println("Couldn't load \"" + this.args[0] + "\".");
/*     */       }
/*     */     
/*     */     } else {
/*     */       
/*  40 */       properties.setProperty("db.class", "org.sqlite.JDBC");
/*  41 */       properties.setProperty("db.dsn", "jdbc:sqlite:test.db");
/*     */     } 
/*  43 */     Setting[] settings = {
/*  44 */         new Setting("db.class", "org.sqlite.JDBC", new String[] { "org.sqlite.JDBC", "com.mysql.jdbc.Driver"
/*  45 */           }), new Setting("base.dir", "."), 
/*  46 */         new Setting("gui.flash.timeout", 1000, 0, 2147483647), 
/*  47 */         new Setting("db.dsn", "jdbc:sqlite:test.db", new String[] { "jdbc:sqlite:test.db", "jdbc:mysql://host/db?user=&password="
/*  48 */           }), new Setting("cursor.visible", false)
/*     */       };
/*     */     
/*  51 */     for (int i = 0; i < settings.length; i++)
/*     */     {
/*  53 */       properties.setProperty(settings[i].getProp(), settings[i].prompt(properties.getProperty(settings[i].getProp(), null)));
/*     */     }
/*     */     
/*  56 */     if (this.args.length > 0) {
/*     */ 
/*     */       
/*     */       try {
/*  60 */         properties.storeToXML(new FileOutputStream(this.args[0]), "Generated by Configure 0.1");
/*     */       }
/*  62 */       catch (Exception e) {
/*     */         
/*  64 */         System.err.println("Couldn't store \"" + this.args[0] + "\".");
/*     */       } 
/*     */     } else {
/*     */ 
/*     */       
/*     */       try {
/*     */         
/*  71 */         properties.storeToXML(System.out, "Generated by Configure 0.1");
/*     */       }
/*  73 */       catch (Exception e) {
/*     */         
/*  75 */         System.err.println("Couldn't dump XML");
/*     */       } 
/*     */     } 
/*     */   }
/*     */ 
/*     */   
/*     */   protected class Setting
/*     */   {
/*     */     static final int TYPE_STRING = 0;
/*     */     static final int TYPE_INT = 1;
/*     */     static final int TYPE_ENUM = 2;
/*     */     static final int TYPE_BOOLEAN = 3;
/*     */     String prop;
/*     */     int type;
/*     */     String sDefault;
/*     */     int iDefault;
/*     */     int iMin;
/*     */     int iMax;
/*     */     String[] sEnum;
/*     */     boolean bDefault;
/*     */     
/*     */     public Setting(String prop, String defaultValue) {
/*  97 */       this.prop = prop;
/*  98 */       this.type = 0;
/*  99 */       this.sDefault = defaultValue;
/*     */     }
/*     */     
/*     */     public Setting(String prop, boolean defaultValue) {
/* 103 */       this.prop = prop;
/* 104 */       this.type = 3;
/* 105 */       this.bDefault = defaultValue;
/*     */     }
/*     */     
/*     */     public Setting(String prop, String defaultValue, String[] values) {
/* 109 */       this.prop = prop;
/* 110 */       this.sDefault = defaultValue;
/* 111 */       this.sEnum = values;
/* 112 */       this.iMin = 1;
/* 113 */       this.iMax = this.sEnum.length;
/* 114 */       this.iDefault = 1;
/* 115 */       for (int i = 0; i < this.sEnum.length; i++) {
/*     */         
/* 117 */         if (this.sEnum[i].equals(defaultValue)) this.iDefault = i + 1; 
/*     */       } 
/* 119 */       this.type = 2;
/*     */     }
/*     */     
/*     */     public Setting(String prop, int defaultValue) {
/* 123 */       this(prop, defaultValue, -2147483648, 2147483647);
/*     */     }
/*     */     
/*     */     public Setting(String prop, int defaultValue, int minValue, int maxValue) {
/* 127 */       this.prop = prop;
/* 128 */       this.iDefault = defaultValue;
/* 129 */       this.iMin = minValue;
/* 130 */       this.iMax = maxValue;
/* 131 */       this.type = 1;
/*     */     }
/*     */     
/*     */     public String getProp() {
/* 135 */       return this.prop;
/*     */     }
/*     */     
/*     */     public String prompt(String prevValue) {
/*     */       int i;
/* 140 */       if (prevValue != null)
/*     */       {
/* 142 */         if (this.type == 1) {
/*     */           
/* 144 */           try { this.iDefault = Integer.parseInt(prevValue); } catch (Exception exception) {}
/*     */         }
/* 146 */         else if (this.type == 2) {
/*     */           
/* 148 */           for (int j = 0; j < this.sEnum.length; j++) {
/*     */             
/* 150 */             if (this.sEnum[j].equals(prevValue)) this.iDefault = j + 1;
/*     */           
/*     */           } 
/* 153 */         } else if (this.type == 3) {
/*     */           
/* 155 */           try { this.bDefault = (Integer.parseInt(prevValue) != 0); } catch (Exception exception) {}
/*     */         }
/*     */         else {
/*     */           
/* 159 */           this.sDefault = prevValue;
/*     */         } 
/*     */       }
/* 162 */       switch (this.type) {
/*     */         
/*     */         case 0:
/* 165 */           System.err.printf("%s [%s]: ", new Object[] { this.prop, this.sDefault });
/*     */           
/*     */           try {
/* 168 */             String s = Configure.this.in.readLine();
/* 169 */             if (s.length() > 0) return s;
/*     */           
/* 171 */           } catch (Exception exception) {}
/* 172 */           return this.sDefault;
/*     */ 
/*     */         
/*     */         case 1:
/*     */           while (true)
/* 177 */           { if (this.iMin == Integer.MIN_VALUE && this.iMax == Integer.MAX_VALUE) {
/*     */               
/* 179 */               System.err.printf("%s [%d]: ", new Object[] { this.prop, Integer.valueOf(this.iDefault) });
/*     */             }
/* 181 */             else if (this.iMin == Integer.MIN_VALUE) {
/*     */               
/* 183 */               System.err.printf("%s [%d] (<=%d): ", new Object[] { this.prop, Integer.valueOf(this.iDefault), Integer.valueOf(this.iMax) });
/*     */             }
/* 185 */             else if (this.iMax == Integer.MAX_VALUE) {
/*     */               
/* 187 */               System.err.printf("%s [%d] (>=%d): ", new Object[] { this.prop, Integer.valueOf(this.iDefault), Integer.valueOf(this.iMin) });
/*     */             }
/*     */             else {
/*     */               
/* 191 */               System.err.printf("%s [%d] (%d-%d): ", new Object[] { this.prop, Integer.valueOf(this.iDefault), Integer.valueOf(this.iMin), Integer.valueOf(this.iMax) });
/*     */             } 
/*     */ 
/*     */             
/* 195 */             try { String s = Configure.this.in.readLine();
/* 196 */               if (s.length() > 0) {
/*     */ 
/*     */                 
/*     */                 try {
/* 200 */                   int j = Integer.parseInt(s);
/* 201 */                   if (j >= this.iMin && j <= this.iMax)
/*     */                   {
/* 203 */                     return String.valueOf(j);
/*     */                   }
/*     */                 }
/* 206 */                 catch (Exception exception) {}
/*     */                 
/*     */                 continue;
/*     */               } 
/* 210 */               return String.valueOf(this.iDefault);
/*     */                }
/*     */             
/* 213 */             catch (Exception exception)
/*     */             
/*     */             { 
/*     */ 
/*     */               
/* 218 */               return String.valueOf(this.iDefault); }  } 
/*     */         case 2:
/* 220 */           for (i = 0; i < this.sEnum.length; i++) {
/*     */             
/* 222 */             System.err.printf("%5d: %s\n", new Object[] { Integer.valueOf(i + 1), this.sEnum[i] });
/*     */           } 
/*     */           
/*     */           while (true) {
/* 226 */             System.err.printf("%s [%d] (%d-%d): ", new Object[] { this.prop, Integer.valueOf(this.iDefault), Integer.valueOf(this.iMin), Integer.valueOf(this.iMax) });
/*     */ 
/*     */             
/*     */             try {
/* 230 */               String s = Configure.this.in.readLine();
/* 231 */               if (s.length() > 0) {
/*     */ 
/*     */                 
/*     */                 try {
/* 235 */                   i = Integer.parseInt(s);
/* 236 */                   if (i >= this.iMin && i <= this.iMax)
/*     */                   {
/* 238 */                     return this.sEnum[i - 1];
/*     */                   }
/*     */                 }
/* 241 */                 catch (Exception exception) {}
/*     */                 
/*     */                 continue;
/*     */               } 
/* 245 */               return this.sEnum[this.iDefault - 1];
/*     */             
/*     */             }
/* 248 */             catch (Exception exception) {
/*     */ 
/*     */ 
/*     */ 
/*     */               
/* 253 */               return this.sEnum[this.iDefault - 1];
/*     */             } 
/*     */           } 
/*     */         case 3:
/* 257 */           while (true) { System.err.printf("%s [%s/%s]: ", new Object[] { this.prop, this.bDefault ? "Y" : "N", this.bDefault ? "n" : "y" });
/*     */ 
/*     */             
/* 260 */             try { String s = Configure.this.in.readLine().toLowerCase();
/* 261 */               if (s.length() == 0) return this.bDefault ? "1" : "0"; 
/* 262 */               if (s.startsWith("y")) return "1"; 
/* 263 */               if (s.startsWith("n")) return "0";
/*     */                }
/* 265 */             catch (Exception exception)
/*     */             
/*     */             { 
/*     */ 
/*     */ 
/*     */               
/* 271 */               return "0"; }  }
/*     */         
/* 273 */       }  return "NYI";
/*     */     }
/*     */   }
/*     */ }


/* Location:              /Users/nicholas/Desktop/old-knt/old-jar/program.jar!/vu/storm/touch/Configure.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */